import numpy as np
def phi_coal_minus(phiCoal, incl, PhiL, alphaHatMinus, thetaMinus=0, beta=0):
    return np.arccos((np.cos(phiCoal) * ((np.cos((alphaHatMinus + (-beta) + (-thetaMinus))) * np.sin(incl)) + (-((np.cos(incl)**2) * np.cos(PhiL) * (((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2)))**(-1/2)) * np.sin((alphaHatMinus + (-beta) + (-thetaMinus)))))) * ((((np.sin(PhiL)**2) * (1/((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2)))) * (np.sin((alphaHatMinus + (-beta) + (-thetaMinus)))**2)) + (((np.cos((alphaHatMinus + (-beta) + (-thetaMinus))) * np.sin(incl)) + (-((np.cos(incl)**2) * np.cos(PhiL) * (((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2)))**(-1/2)) * np.sin((alphaHatMinus + (-beta) + (-thetaMinus))))))**2))**(-1/2))) + (-(np.sin(phiCoal) * np.sin(PhiL) * np.sin((alphaHatMinus + (-beta) + (-thetaMinus))) * ((((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2))) * (((np.sin(PhiL)**2) * (1/((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2)))) * (np.sin((alphaHatMinus + (-beta) + (-thetaMinus)))**2)) + (((np.cos((alphaHatMinus + (-beta) + (-thetaMinus))) * np.sin(incl)) + (-((np.cos(incl)**2) * np.cos(PhiL) * (((np.cos(incl)**2) + ((np.sin(incl)**2) * (np.sin(PhiL)**2)))**(-1/2)) * np.sin((alphaHatMinus + (-beta) + (-thetaMinus))))))**2)))**(-1/2)))))